{
    "collab_server" : "",
    "contents" : "library(rvest)\n\n#url=\"http://eelnoud.valitsus.ee/main/mount/rss/home/submission.rss\"\nurl=\"http://eelnoud.valitsus.ee/main/mount/rss/home/review.rss\"\n\nalgleht <- read_html(url)\n\n#siit saab kõigi eelnõudel lingid kätte\nlingid=algleht%>%\n  html_nodes(\"body channel item guid\")%>%\n  html_text()\n#linkitest duplikaadid välja\nlingid_algne=lingid\nlingid2=gsub(\"\\\\?activity=\\\\d\", \"\", lingid)\nlingid2=unique(lingid2)\n#\nurl2=lingid[2]\nurl3=lingid[9]\nurl8=lingid[4578]\n# url5=lingid[55]\n#url8=lingid[4062]\nleht1 <- read_html(url2)\nleht2 <- read_html(url3)\n# leht3=read_html(url4)\n# leht4=read_html(url5)\nleht8=read_html(url8)\n\n#töötab\nkooskõlastused=leht2%>%\n  html_nodes(\"#content > div > div > table > tbody > tr\")%>%\n  html_text()\n\npealkiri=leht2%>%\n  html_nodes(\"#content > div.heading.clear > div > h1\")%>%\n  html_text()\n\ndata=list()\npealkiri=list()\n##loopi proov\nfor (i in 1:100) {\n  leht <- read_html(lingid[i])\n  temp=leht%>%\n    html_nodes(\"#content > div > div > table > tbody > tr >td\")%>%\n    html_text()\n  data[[i]]=temp\n  \n  pealktemp=leht%>%\n    html_nodes(\"#content > div.heading.clear > div > h1\")%>%\n    html_text()\n  pealkiri[[i]]=pealktemp\n}\n\n#loobin kraabitud andmed struktuuri\nkooskolastaja=c()\ntahtaeg=c()\nvastamisaeg=c()\nmarkused=c()\naktinimi=c()\nlink=c()\n\nfor (i in 1:length(data)) {\n  for (j in 1:(length(data[[i]])/6)) {\n    kooskolastaja=append(kooskolastaja, data[[i]][(j-1)*6+2])\n    tahtaeg=append(tahtaeg, data[[i]][(j-1)*6+3])\n    vastamisaeg=append(vastamisaeg, data[[i]][(j-1)*6+4])\n    markused=append(markused, data[[i]][(j-1)*6+5])\n    aktinimi=append(aktinimi, pealkiri[[i]][1])\n    link=append(link, lingid[i])\n  }\n}\n\n\nkoikandmed=data.frame(kooskolastaja, tahtaeg, vastamisaeg, markused, aktinimi,\n                      link)\n\n\n#variant 2, parsin listi kogu sodi, selt grepin välja\ndata=list()\npealkiri=list()\n##loopi proov\n#puhasta lingid ära!!!!\n# for (i in 1:length(lingid)) {\n  for (i in 2459:nrow(lingid)) {\n  leht <- read_html(lingid[i])\n  temp=leht%>%\n    html_nodes(\"#content > div > div > table > tbody > tr \")%>%\n    html_text()\n  data[[i]]=temp\n  \n  pealktemp=leht%>%\n    html_nodes(\"#content > div.heading.clear > div > h1\")%>%\n    html_text()\n  pealkiri[[i]]=pealktemp\n  print(i)\n}\n\n#eemdladab elemendid, mis on tühjad\np=lapply(data, function(x) x[x != \"\"])\np=lapply(p, function(x) x[grepl(\"Vaata andmeid|seaduse\",x)==F])\n\n#proovime nüüd listida\nesitaja=lapply(p, function(x) unlist(strsplit(x, \"TĆ¤htaeg:\"))[1])\n\nesitaja2=c()\nfor (i in 1:length(esitaja)) {\n  esitaja2[i]=esitaja[[i]][1]\n}\n#muu sodi, et edasi puhastada\nmuusodi=lapply(p, function(x) unlist(strsplit(x, \"TĆ¤htaeg:\"))[2])\ntahtaeg=lapply(muusodi, function(x) unlist(strsplit(x, \"Vastatud:\"))[1])\ntahtaeg2=c()\nfor (i in 1:length(tahtaeg)) {\n  tahtaeg2[i]=tahtaeg[[i]][1]\n}\n\n##asutus\ntulem=unlist(p)\n#asutus=strsplit(tulem, \"TĆ¤htaeg:|Vastatud:\")\nasutus=strsplit(tulem, \"TĆ¤htaeg:\")\n\nasutus2=c()\nfor (i in 1:length(asutus)) {\n  asutus2[i]=asutus[[i]][1]\n}\n\n#ülejäänud sodi\nmuu=c()\nfor (i in 1:length(asutus)) {\n  muu[i]=asutus[[i]][2]\n}\n\n#tähtaeg\nsodi=strsplit(muu, \"[A-Z]\")\ntahtaeg=c()\nfor (i in 1:length(sodi)) {\n  tahtaeg[i]=sodi[[i]][1]\n}\nlibrary(stringr)\ntahtaeg=str_trim(tahtaeg, side = c(\"both\"))\ntahtaeg_aeg=strptime(tahtaeg, \"%d.%m.%Y %H:%M\")\n#eemaldame muust nüüd aja\nvastus=c()\nfor (i in 1:length(muu)) {\n  vastus[i]=gsub(tahtaeg[i], \"\", muu[i])\n}\nvastus=str_trim(vastus, side = c(\"both\"))\n\n\n#dfiks\ndata_df=data.frame(asutus2, tahtaeg_aeg, vastus)\n#ainult JUMi asjad\njum=data_df[grepl(\"Justiits\",data_df$asutus2),]\njum=jum[!grepl(\"Vastatud\",jum$asutus2),]\njum=jum[!grepl(\"Uus\",jum$asutus2),]\n\n#vastus_puhas\njum$vastusPuhas=NA\nfor(i in 1:nrow(jum)){\n  if (grepl(\"KooskĆµlastatud mĆ¤rkustega\", jum$vastus[i])) {\n    jum$vastusPuhas[i]=\"KooskĆµlastatud mĆ¤rkustega\"\n  }  else if (grepl(\"Mitte kooskĆµlastatud\", jum$vastus[i])) {\n    jum$vastusPuhas[i]=\"Mitte kooskĆµlastatud\"\n  } else if (grepl(\"KooskĆµlastatud\", jum$vastus[i])) {\n    jum$vastusPuhas[i]=\"KooskĆµlastatud\"\n  } else {\n      next\n    }\n}\n\n#puhastame vastamise aja välja\njum$vastamise_aeg=NA\njum$vastamise_aeg=gsub(\"[A-Z]\", \"\", jum$vastus)\njum$vastamise_aeg=gsub(\"[a-z]\", \"\", jum$vastamise_aeg)\njum$vastamise_aeg=gsub(\"Ć¤\", \"\", jum$vastamise_aeg)\njum$vastamise_aeg=gsub(\"Ć¼\", \"\", jum$vastamise_aeg)\njum$vastamise_aeg=gsub(\"Ćµ\", \"\", jum$vastamise_aeg)\njum$vastamise_aeg=gsub(\": \", \"\", jum$vastamise_aeg)\njum$vastamise_aeg=str_trim(jum$vastamise_aeg, side=c(\"both\"))\n\njum$vastamise_aeg2=strptime(jum$vastamise_aeg, \"%d.%m.%Y %H:%M\")\n#leiame ridade arvu, kus jum on hiljaks jäänud\njum$hilinemine=NA\nfor (i in 1:nrow(jum)) {\n  if (!is.na(jum$vastamise_aeg2[i])) {\n    jum$hilinemine[i]=jum$tahtaeg_aeg[i]<jum$vastamise_aeg2[i]\n  }\n}\n\n#sordime tähtaja järgi\njum=jum[order(jum$tahtaeg_aeg, decreasing = T),]\njum_algne=jum\njum=jum[1:1276,]\n#mitu korda hilineti\nsum(jum$hilinemine, na.rm = T)\nsum(jum$hilinemine, na.rm = T)/(nrow(jum)-3) #%\n\n#kui võtame tuhende\nsum(jum$hilinemine[1:1000], na.rm = T)/1000 #%\nsum(jum$hilinemine[1:500], na.rm = T)/500 #%\nsum(jum$hilinemine[1:100], na.rm = T)/100 #%\nsum(jum$hilinemine[1:50], na.rm = T)/50 #%\n#hilinetud päevade arv\njum$hilinemise_kestvus=NA\nfor (i in 1:nrow(jum)) {\n  if (!is.na(jum$hilinemine[i])) {\n  if (jum$hilinemine[i]==T) {\n    jum$hilinemise_kestvus[i]=jum$vastamise_aeg2[i]-jum$tahtaeg_aeg[i]\n  } \n    }else {\n    next\n  }\n}\n\n#keskmine hilinemine\nmedian(jum$hilinemise_kestvus, na.rm = T)\nmean(jum$hilinemise_kestvus, na.rm = T)\nmax(jum$hilinemise_kestvus, na.rm = T)\n#1000\nmedian(jum$hilinemise_kestvus[1:1000], na.rm = T)\n#lühema perioodi kohta, 500\nmedian(jum$hilinemise_kestvus[1:500], na.rm = T)\nmean(jum$hilinemise_kestvus[1:500], na.rm = T)\nmax(jum$hilinemise_kestvus[1:500], na.rm = T)\n\n#100 viimast\nmedian(jum$hilinemise_kestvus[1:100], na.rm = T)\nmean(jum$hilinemise_kestvus[1:100], na.rm = T)\nmax(jum$hilinemise_kestvus[1:100], na.rm = T)\n\n##############nüüd sama asi teiste minnide, va jum\n#dfiks\ndata_df=data.frame(asutus2, tahtaeg_aeg, vastus)\n#ainult JUMi asjad\nmittejum=data_df[!grepl(\"Justiits\",data_df$asutus2),]\nmittejum=mittejum[!grepl(\"Vastatud\",mittejum$asutus2),]\n\n#vastus_puhas\nmittejum$vastusPuhas=NA\nfor(i in 1:nrow(mittejum)){\n  if (grepl(\"KooskĆµlastatud mĆ¤rkustega\", mittejum$vastus[i])) {\n    mittejum$vastusPuhas[i]=\"KooskĆµlastatud mĆ¤rkustega\"\n  }  else if (grepl(\"Mitte kooskĆµlastatud\", mittejum$vastus[i])) {\n    mittejum$vastusPuhas[i]=\"Mitte kooskĆµlastatud\"\n  } else if (grepl(\"KooskĆµlastatud\", mittejum$vastus[i])) {\n    mittejum$vastusPuhas[i]=\"KooskĆµlastatud\"\n  } else {\n    next\n  }\n}\n\n#puhastame vastamise aja välja\nmittejum$vastamise_aeg=NA\nmittejum$vastamise_aeg=gsub(\"[A-Z]\", \"\", mittejum$vastus)\nmittejum$vastamise_aeg=gsub(\"[a-z]\", \"\", mittejum$vastamise_aeg)\nmittejum$vastamise_aeg=gsub(\"Ć¤\", \"\", mittejum$vastamise_aeg)\nmittejum$vastamise_aeg=gsub(\"Ć¼\", \"\", mittejum$vastamise_aeg)\nmittejum$vastamise_aeg=gsub(\"Ćµ\", \"\", mittejum$vastamise_aeg)\nmittejum$vastamise_aeg=gsub(\": \", \"\", mittejum$vastamise_aeg)\nmittejum$vastamise_aeg=str_trim(mittejum$vastamise_aeg, side=c(\"both\"))\n\nmittejum$vastamise_aeg2=strptime(mittejum$vastamise_aeg, \"%d.%m.%Y %H:%M\")\n#leiame ridade arvu, kus mittejum on hiljaks jäänud\nmittejum$hilinemine=NA\nfor (i in 1:nrow(mittejum)) {\n  if (!is.na(mittejum$vastamise_aeg2[i])) {\n    mittejum$hilinemine[i]=mittejum$tahtaeg_aeg[i]<mittejum$vastamise_aeg2[i]\n  }\n}\n\n#tähtaja järgi järjekorda\nmittejum=mittejum[order(mittejum$tahtaeg_aeg, decreasing = T),]\nmittejum_algne=mittejum\nmittejum=mittejum[1:12297,] #mingi sodi on ikka sees, võtan selle välja\n#mitu korda hilineti\nsum(mittejum$hilinemine, na.rm = T)\nsum(mittejum$hilinemine, na.rm = T)/nrow(mittejum) #%\n\n#kui võtame tuhende kuupäeva jumi järgi\njum1000=min(which(mittejum$tahtaeg_aeg==jum[1000, \"tahtaeg_aeg\"]))\nsum(mittejum$hilinemine[1:jum1000], na.rm = T)/jum1000 #%\njum500=min(which(mittejum$tahtaeg_aeg==jum[500, \"tahtaeg_aeg\"]))\nsum(mittejum$hilinemine[1:jum500], na.rm = T)/jum500 #%\njum100=min(which(mittejum$tahtaeg_aeg==jum[100, \"tahtaeg_aeg\"]))\nsum(mittejum$hilinemine[1:jum100], na.rm = T)/jum100 #%\njum50=min(which(mittejum$tahtaeg_aeg==jum[50, \"tahtaeg_aeg\"]))\nsum(mittejum$hilinemine[1:jum50], na.rm = T)/jum50 #%\n#hilinetud päevade arv\nmittejum$hilinemise_kestvus=NA\nfor (i in 1:nrow(mittejum)) {\n  if (!is.na(mittejum$hilinemine[i])) {\n    if (mittejum$hilinemine[i]==T) {\n      mittejum$hilinemise_kestvus[i]=mittejum$vastamise_aeg2[i]-mittejum$tahtaeg_aeg[i]\n    } \n  }else {\n    next\n  }\n}\n\n\n#keskmine hilinemine\nmedian(mittejum$hilinemise_kestvus, na.rm = T)\nmean(mittejum$hilinemise_kestvus, na.rm = T)\nmax(mittejum$hilinemise_kestvus, na.rm = T)\n\n#1000 päeva   \nmedian(mittejum$hilinemise_kestvus[1:jum1000], na.rm = T)\n\n#lühema perioodi kohta, 500\nmedian(mittejum$hilinemise_kestvus[1:jum500], na.rm = T)\nmean(mittejum$hilinemise_kestvus[1:jum500], na.rm = T)\nmax(mittejum$hilinemise_kestvus[1:jum500], na.rm = T)\n\n#100 viimast\nmedian(mittejum$hilinemise_kestvus[1:jum100], na.rm = T)\nmean(mittejum$hilinemise_kestvus[1:jum100], na.rm = T)\nmax(mittejum$hilinemise_kestvus[1:jum100], na.rm = T)\n\n",
    "created" : 1462376528198.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2656895438",
    "id" : "3D214E9F",
    "lastKnownWriteTime" : 1462427460,
    "last_content_update" : 1462427460986,
    "path" : "C:/1_minu asjad/Github/EIS-kraapimine/EIS_kraapimine.R",
    "project_path" : "EIS_kraapimine.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}