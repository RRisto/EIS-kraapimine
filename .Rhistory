for (i in 6:10) {
leht <- read_html(lingid2[i])
temp=leht%>%
html_nodes("#content > div > div > table > tbody > tr ")%>%
html_text()
data[[i]]=temp
pealktemp=leht%>%
html_nodes("#content > div.heading.clear > div > h1")%>%
html_text()
pealkiri[[i]]=pealktemp
print(i)
}
p=lapply(data, function(x) x[x != ""])
p=lapply(p, function(x) x[grepl("Vaata andmeid|seaduse",x)==F])
#proovime nüüd listida
esitaja=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[1])
esitaja2=c()
for (i in 1:length(esitaja)) {
esitaja2[i]=esitaja[[i]][1]
}
#muu sodi, et edasi puhastada
muusodi=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[2])
tahtaeg=lapply(muusodi, function(x) unlist(strsplit(x, "Vastatud:"))[1])
tahtaeg2=c()
for (i in 1:length(tahtaeg)) {
tahtaeg2[i]=tahtaeg[[i]][1]
}
esitaja2
tahtaeg2
lingid2[11]
strsplit(tahtaeg2, "\\d\\D")
strsplit(tahtaeg2, "\\D")
tahtaeg2[[2]]
strsplit(tahtaeg2[[2]], "\\d.\\d.\\d \\d:\\d")
for (i in 11:11) {
leht <- read_html(lingid2[i])
temp=leht%>%
html_nodes("#content > div > div > table > tbody > tr ")%>%
html_text()
data[[i]]=temp
pealktemp=leht%>%
html_nodes("#content > div.heading.clear > div > h1")%>%
html_text()
pealkiri[[i]]=pealktemp
print(i)
}
p=lapply(data, function(x) x[x != ""])
p=lapply(p, function(x) x[grepl("Vaata andmeid|seaduse",x)==F])
#proovime nüüd listida
esitaja=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[1])
esitaja2=c()
for (i in 1:length(esitaja)) {
esitaja2[i]=esitaja[[i]][1]
}
#muu sodi, et edasi puhastada
muusodi=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[2])
tahtaeg=lapply(muusodi, function(x) unlist(strsplit(x, "Vastatud:"))[1])
tahtaeg2=c()
for (i in 1:length(tahtaeg)) {
tahtaeg2[i]=tahtaeg[[i]][1]
}
#tulem
tahtaeg2[11]
tahtaeg2[[11]]
data
data[[11]]
p[[11]]
unlist(p[[11]])
unlist(p)
tulem=unlist(p)
asutus=strsplit(tulem, "TĆ¤htaeg:", tulem)
asutus
asutus=unlist(strsplit(tulem, "TĆ¤htaeg:", tulem))
asutus=unlist(strsplit(tulem, "TĆ¤htaeg:", tulem))[1]
asutus=unlist(strsplit(tulem, "TĆ¤htaeg:", tulem))[[1]]
unlist(strsplit(tulem[1], "TĆ¤htaeg:", tulem))
(strsplit(tulem[1], "TĆ¤htaeg:", tulem))
unlist(strsplit(tulem[1], "TĆ¤htaeg:", tulem))[1]
unlist(strsplit(tulem[1:2], "TĆ¤htaeg:", tulem))[1]
asutus=strsplit(tulem, "TĆ¤htaeg:", tulem)
asutus
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
asutus2
asutus=strsplit(tulem, "TĆ¤htaeg:|Vastatud:", tulem)
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
asutus2
muu=c()
for (i in 1:length(asutus)) {
muu[i]=asutus[[i]][2]
}
muu
tulem[61]
asutus=strsplit(tulem, "TĆ¤htaeg:|Vastatud:")
asutus
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
asutus2
sodi=strsplit(muu, "[A-Z]")
sodi[[1]]
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
tahtaeg
install.packages("stringr")
install.packages("stringr")
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg[1]
tahtaeg_time=strptime(tahtaeg,"%d.%m.%y %H:%M")
kpv=strsplit(tahtaeg, " ")[1]
kpv
kpv=strsplit(tahtaeg, " ")
kpv_aeg=c()
for(i in 1:length(kpv)) {
kpv_aeg[i]=kpv[[i]][1]
}
kpv_aeg=strptime(kpv_aeg,"%d.%m.%y")
kpv_aeg=c()
for(i in 1:length(kpv)) {
kpv_aeg[i]=kpv[[i]][1]
}
kpv_aeg
kpv_aeg2=strptime(kpv_aeg,"%d.%m.%y")
kpv_aeg2
kpv_aeg2=strptime(kpv_aeg,"%D.%m.%y")
kpv
kpv_aeg
strptime("18.05.2016","%d.%m.%y")
kpv_aeg2=strptime(kpv_aeg,"%d.%m.%y")
kpv_aeg2[60:62]
kpv_aeg[60:62]
kpv
kell=c()
for(i in 1:length(kpv)) {
kell[i]=kpv[[i]][2]
}
kpv
strptime(kpv, "%d.%m.%y %H:%M")
strptime(tahtaeg, "%d.%m.%y %H:%M")
tahtaeg
kell_aeg=strptime(kell, "%H:%M")
strptime(tahtaeg, "%d.%m.%y %H:%M")
strptime(tahtaeg, "%d.%m.%y %I:%M")
strptime(tahtaeg, "%d.%m.%Y %I:%M")
strptime(tahtaeg, "%d.%m.%Y %H:%M")
tahtaeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
tahtaeg
muu[[62]]
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg_aeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
sodi
muu
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahteg[i], "", muu)
}
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu)
}
warnings
warnings()
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu[i])
}
vastus
muu
vastus=str_trim(vastus, side = c("both"))
vastus
save(data, "data.RData")
save(data, file="data.RData")
proov=load(file="data.RData")
proov
head/data
head(data)
data2=data
save(data2, file="data2.RData")
load(file="data2.RData")
rm(data2)
load(file="data2.RData")
rm(data2)
load(file="data2.RData")
data2
load(file="data.RData")
load(file="pealk.RData")
p=lapply(data, function(x) x[x != ""])
p=lapply(p, function(x) x[grepl("Vaata andmeid|seaduse",x)==F])
#proovime nüüd listida
esitaja=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[1])
esitaja2=c()
for (i in 1:length(esitaja)) {
esitaja2[i]=esitaja[[i]][1]
}
#muu sodi, et edasi puhastada
muusodi=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[2])
tahtaeg=lapply(muusodi, function(x) unlist(strsplit(x, "Vastatud:"))[1])
tahtaeg2=c()
for (i in 1:length(tahtaeg)) {
tahtaeg2[i]=tahtaeg[[i]][1]
}
tulem=unlist(p)
asutus=strsplit(tulem, "TĆ¤htaeg:|Vastatud:")
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
#ülejäänud sodi
muu=c()
for (i in 1:length(asutus)) {
muu[i]=asutus[[i]][2]
}
#tähtaeg
sodi=strsplit(muu, "[A-Z]")
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg_aeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
#eemaldame muust nüüd aja
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu[i])
}
vastus=str_trim(vastus, side = c("both"))
data_df=data.frame(esitaja, tahtaeg_aeg, vastus)
View(data_df)
data_df=as.data.frame(esitaja, tahtaeg_aeg, vastus)
data_df=data.frame(esitaja2, tahtaeg_aeg, vastus)
p=lapply(data, function(x) x[x != ""])
p=lapply(p, function(x) x[grepl("Vaata andmeid|seaduse",x)==F])
data881
data[[1]]
p=lapply(data, function(x) x[x != ""])
p=lapply(p, function(x) x[grepl("Vaata andmeid|seaduse",x)==F])
p[[1]]
p[[10]]
esitaja=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[1])
esitaja2=c()
for (i in 1:length(esitaja)) {
esitaja2[i]=esitaja[[i]][1]
}
muusodi=lapply(p, function(x) unlist(strsplit(x, "TĆ¤htaeg:"))[2])
tahtaeg=lapply(muusodi, function(x) unlist(strsplit(x, "Vastatud:"))[1])
tahtaeg2=c()
for (i in 1:length(tahtaeg)) {
tahtaeg2[i]=tahtaeg[[i]][1]
}
tulem=unlist(p)
asutus=strsplit(tulem, "TĆ¤htaeg:|Vastatud:")
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
muu=c()
for (i in 1:length(asutus)) {
muu[i]=asutus[[i]][2]
}
sodi=strsplit(muu, "[A-Z]")
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg_aeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
#eemaldame muust nüüd aja
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu[i])
}
vastus=str_trim(vastus, side = c("both"))
data_df=data.frame(asutus2, tahtaeg_str, vastus)
data_df=data.frame(asutus2, tahtaeg_aeg, vastus)
View(data_df)
jum=data_df[grep("Justiits",data_df$asutus2),]
View(jum)
data[[100]]
asutus=strsplit(tulem, "TĆ¤htaeg:|Vastatud:")
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
#ülejäänud sodi
muu=c()
for (i in 1:length(asutus)) {
muu[i]=asutus[[i]][2]
}
#tähtaeg
sodi=strsplit(muu, "[A-Z]")
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg_aeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
#eemaldame muust nüüd aja
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu[i])
}
vastus=str_trim(vastus, side = c("both"))
#dfiks
data_df=data.frame(asutus2, tahtaeg_aeg, vastus)
#ainult JUMi asjad
jum=data_df[grep("Justiits",data_df$asutus2),]
View(jum)
asutus=strsplit(tulem, "TĆ¤htaeg:")
asutus2=c()
for (i in 1:length(asutus)) {
asutus2[i]=asutus[[i]][1]
}
#ülejäänud sodi
muu=c()
for (i in 1:length(asutus)) {
muu[i]=asutus[[i]][2]
}
#tähtaeg
sodi=strsplit(muu, "[A-Z]")
tahtaeg=c()
for (i in 1:length(sodi)) {
tahtaeg[i]=sodi[[i]][1]
}
library(stringr)
tahtaeg=str_trim(tahtaeg, side = c("both"))
tahtaeg_aeg=strptime(tahtaeg, "%d.%m.%Y %H:%M")
#eemaldame muust nüüd aja
vastus=c()
for (i in 1:length(muu)) {
vastus[i]=gsub(tahtaeg[i], "", muu[i])
}
vastus=str_trim(vastus, side = c("both"))
#dfiks
data_df=data.frame(asutus2, tahtaeg_aeg, vastus)
#ainult JUMi asjad
jum=data_df[grep("Justiits",data_df$asutus2),]
View(jum)
unique(jum$vastus)
jum$vastusPuhas=NA
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grep("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  } else if (grep("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grep("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
}
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grep("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  else if (grep("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grep("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
}
}
i=
1
i
View(jum)
View(data_df)
data_df=data.frame(asutus2, tahtaeg_aeg, vastus)
jum=data_df[grep("Justiits",data_df$asutus2),]
View(jum)
jum=data_df[grep("Justiits",data_df$asutus2),]
#vastus_puhas
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grep("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  else if (grep("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grep("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
} else {
next
}
}
jum$vastus[i]
grepl("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grepl("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  else if (grep("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grep("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
} else {
next
}
}
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grepl("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  else if (grepl("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grepl("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
} else {
next
}
}
View(jum)
jum=data_df[!grep("Vastatud",jum$asutus2),]
jum=data_df[grep("Justiits",data_df$asutus2),]
jum=data_df[grepl("Justiits",data_df$asutus2),]
jum=data_df[!grepl("Vastatud",jum$asutus2),]
jum=data_df[grepl("Justiits",data_df$asutus2),]
jum=jum[!grepl("Vastatud",jum$asutus2),]
View(jum)
jum$vastusPuhas=NA
for(i in 1:nrow(jum)){
if (grepl("KooskĆµlastatud mĆ¤rkustega", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud mĆ¤rkustega"
}  else if (grepl("Mitte kooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="Mitte kooskĆµlastatud"
} else if (grepl("KooskĆµlastatud", jum$vastus[i])) {
jum$vastusPuhas[i]="KooskĆµlastatud"
} else {
next
}
}
View(jum)
jum$vastamise_aeg=gsub("[A-Z]", jum$vastus)
jum$vastamise_aeg=gsub("[A-Z]", "", jum$vastus)
View(jum)
jum$vastamise_aeg=gsub("[a-z]", "", jum$vastamise_aeg)
View(jum)
View(jum)
jum$vastamise_aeg=gsub("Ćµ", "", jum$vastamise_aeg)
View(jum)
jum$vastamise_aeg=gsub("Ć¤", "", jum$vastamise_aeg)
jum$vastamise_aeg=gsub("Ć¼", "", jum$vastamise_aeg)
jum$vastamise_aeg=gsub("Ćµ", "", jum$vastamise_aeg)
View(jum)
jum$vastamise_aeg[2]
jum$vastamise_aeg[1]
jum$vastamise_aeg[3]
jum$vastamise_aeg
jum$vastamise_aeg=gsub(": ", "", jum$vastamise_aeg)
View(jum)
jum$vastamise_aeg=str_trim(jum$vastamise_aeg, side=c("both"))
View(jum)
vastamise_aeg2=strptime(vastamise_aeg, "%d.%m.%Y %H:%M")
jum$vastamise_aeg2=strptime(jum$vastamise_aeg, "%d.%m.%Y %H:%M")
View(jum)
jum$vastamise_aeg2[5]
jum$vastamise_aeg2[5]<jum$tahtaeg_aeg[5]
jum$vastamise_aeg2[5]>jum$tahtaeg_aeg[5]
jum$vastamise_aeg2[1]
jum$hilinemine=NA
for (i in 1:nrow(jum)) {
if (!is.na(jum$vastamise_aeg2)) {
jum$hilinemine[i]=jum$tahtaeg_aeg<jum$vastamise_aeg2
}
}
View(jum)
jum$hilinemine=NA
for (i in 1:nrow(jum)) {
if (!is.na(jum$vastamise_aeg2)) {
jum$hilinemine[i]=jum$tahtaeg_aeg[i]<jum$vastamise_aeg2[i]
}
}
View(jum)
warnings()
jum$hilinemine=NA
for (i in 1:nrow(jum)) {
if (!is.na(jum$vastamise_aeg2[i])) {
jum$hilinemine[i]=jum$tahtaeg_aeg[i]<jum$vastamise_aeg2[i]
}
}
View(jum)
sum(TRUE)
sum(FALSE)
sum(jum$hilinemine)
sum(jum$hilinemine, na.rm = T)
sum(jum$hilinemine, na.rm = T)/nrow(jum)
sum(jum$hilinemine[1:1000], na.rm = T)/1000 #%
sum(jum$hilinemine[1:500], na.rm = T)/500 #%
sum(jum$hilinemine[1:100], na.rm = T)/100 #%
sum(jum$hilinemine[1:50], na.rm = T)/1000 #%
sum(jum$hilinemine[1:50], na.rm = T)/50 #%
View(jum)
sum(jum$hilinemine[1:1000], na.rm = T)
sum(jum$hilinemine[1:500], na.rm = T)
sum(jum$hilinemine[1:500], na.rm = T)/500 #%
sum(jum$hilinemine[1:100], na.rm = T)
sum(jum$hilinemine[1:100], na.rm = T)/100 #%
View(jum)
